import os
import pickle

def load_pickle(file_path):
    with open(file_path, 'rb') as f:
        return pickle.load(f)

def extract_model_info(model, file_path):
    try:
        print("\n" + "=" * 80)
        print(f"Model Path: {file_path}")
        print("Type:", type(model))
        
        if hasattr(model, 'get_params'):
            print("Parameters:", model.get_params())

        if hasattr(model, 'feature_names_in_'):
            print("Feature names:", model.feature_names_in_)

        if hasattr(model, 'coef_'):
            print("Coefficients:", model.coef_)

        if hasattr(model, 'feature_importances_'):
            print("Feature importances:", model.feature_importances_)

        methods = [fn for fn in dir(model) if not fn.startswith("_")]
        print("Available methods:", methods)
        print("=" * 80)

    except Exception as e:
        print(f"Error extracting model info from {file_path}:", e)

def find_and_process_models(root_folder):
    found_models = 0
    for dirpath, dirnames, filenames in os.walk(root_folder):
        print(f"Walking through folder: {dirpath}")
        for filename in filenames:
            if filename == 'trained_model.pkl':
                file_path = os.path.join(dirpath, filename)
                try:
                    model = load_pickle(file_path)
                    extract_model_info(model, file_path)
                    found_models += 1
                except Exception as e:
                    print(f"Error loading {file_path}:", e)

    print(f"\nTotal 'trained_model.pkl' files found and processed: {found_models}")

# Example usage
root_folder = 'C:/Users/bmondB3/Buddha_Projects/ccb_model/ain/models/'
find_and_process_models(root_folder)
