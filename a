import os
import pickle

def load_pickle(file_path):
    with open(file_path, 'rb') as f:
        return pickle.load(f)

def extract_model_info(model):
    try:
        print("=" * 60)
        print("Type:", type(model))
        
        if hasattr(model, 'get_params'):
            print("Parameters:", model.get_params())

        if hasattr(model, 'feature_names_in_'):
            print("Feature names:", model.feature_names_in_)

        if hasattr(model, 'coef_'):
            print("Coefficients:", model.coef_)

        if hasattr(model, 'feature_importances_'):
            print("Feature importances:", model.feature_importances_)

        methods = [fn for fn in dir(model) if not fn.startswith("_")]
        print("Available methods:", methods)
        print("=" * 60)

    except Exception as e:
        print("Error extracting model info:", e)

def find_and_process_models(root_folder):
    for dirpath, _, filenames in os.walk(root_folder):
        for filename in filenames:
            if filename == 'trained_model.pkl':
                file_path = os.path.join(dirpath, filename)
                try:
                    model = load_pickle(file_path)
                    print(f"Loaded model from: {file_path}")
                    extract_model_info(model)
                except Exception as e:
                    print(f"Error loading {file_path}:", e)

# Example usage:
root_folder = 'C:/Users/bmondB3/Buddha_Projects/ccb_model/ain/models/us_virtual_card_data/model_training'
find_and_process_models(root_folder)
